<?xml version="1.0"?>

<bindings id="menulistExtensions"
   xmlns="http://www.mozilla.org/xbl"
   xmlns:html="http://www.w3.org/1999/xhtml"
   xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
   xmlns:xbl="http://www.mozilla.org/xbl">
  <binding id="menulist-editable-image" extends="chrome://global/content/bindings/menulist.xml#menulist-editable">
    <content sizetopopup="pref">
      <xul:hbox class="menulist-editable-box textbox-input-box" xbl:inherits="context" flex="1">
        <xul:image class="menulist-icon" anonid="icon" xbl:inherits="src"/>
        <html:input class="menulist-editable-input" flex="1" anonid="input" allowevents="true"
                    xbl:inherits="value=label,disabled,tabindex,readonly"/>
      </xul:hbox>
      <xul:dropmarker class="menulist-dropmarker" type="menu"/>
      <children includes="menupopup"/>
    </content>
    <handlers>
      <handler event="mousedown" phase="capturing">
        <![CDATA[
          var image = document.getAnonymousElementByAttribute(this, "anonid", "icon");
          if (event.screenX >= image.boxObject.screenX && event.screenX < image.boxObject.screenX + image.boxObject.width) {
            var e = document.createEvent("MouseEvents");
            e.initMouseEvent("iconmousedown", false, false, document.defaultView,
                             event.detail, event.screenX, event.screenY, event.clientX,
                             event.clientY, event.ctrlKey, event.altKey, event.shiftKey,
                             event.metaKey, event.button, event.relatedTarget);
            this.dispatchEvent(e);

            if (!this.disabled) {
              this.disabled = true;
              setTimeout(function(list) {list.disabled = false}, 0, this);
            }
          }
        ]]>
      </handler>
    </handlers>
  </binding>
</bindings>

