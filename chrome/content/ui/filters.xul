<?xml version="1.0"?>

<!-- ***** BEGIN LICENSE BLOCK *****
   - Version: MPL 1.1
   -
   - The contents of this file are subject to the Mozilla Public License Version
   - 1.1 (the "License"); you may not use this file except in compliance with
   - the License. You may obtain a copy of the License at
   - http://www.mozilla.org/MPL/
   -
   - Software distributed under the License is distributed on an "AS IS" basis,
   - WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
   - for the specific language governing rights and limitations under the
   - License.
   -
   - The Original Code is Adblock Plus.
   -
   - The Initial Developer of the Original Code is
   - Wladimir Palant.
   - Portions created by the Initial Developer are Copyright (C) 2006-2011
   - the Initial Developer. All Rights Reserved.
   -
   - Contributor(s):
   -
   - ***** END LICENSE BLOCK ***** -->

<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://adblockplus/skin/filters.css" type="text/css"?>

<!DOCTYPE dialog SYSTEM "chrome://adblockplus/locale/filters.dtd">

<dialog
  xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
  title="&dialog.title;"
  id="abpFiltersWindow"
  onload="init()"
  onunload="cleanUp()"
  buttons="accept"
  width="600"
  height="450"
  buttonlabelaccept="&close.label;"
  persist="screenX screenY width height sizemode"
  windowtype="abp:filters">

<script type="application/x-javascript;version=1.7" src="utils.js"/>
<script type="application/x-javascript;version=1.7" src="filters.js"/>
<script type="application/x-javascript;version=1.7" src="findbar.js"/>

<keyset id="filtersKeyset">
  <key id="subscription-update-key" key="T" modifiers="accel" command="subscription-update-command"/>
  <key id="subscription-editTitle-key" keycode="VK_F2" command="subscription-editTitle-command"/>
  <key id="subscription-delete-key" keycode="VK_DELETE" command="subscription-delete-command"/>
  <key id="subscription-moveUp-key" keycode="VK_UP" modifiers="accel"/>
  <key id="subscription-moveDown-key" keycode="VK_DOWN" modifiers="accel"/>
</keyset>

<commandset id="filtersCommandset">
  <command id="subscription-update-command"
    oncommand="if (isFocusOnSubscriptions()) updateSubscription(E('subscriptions').selectedItem);"/>
  <command id="subscription-editTitle-command"
    oncommand="if (isFocusOnSubscriptions()) titleEditorStart(E('subscriptions').selectedItem);"/>
  <command id="subscription-delete-command"
    oncommand="if (isFocusOnSubscriptions()) removeSubscription(E('subscriptions').selectedItem);"/>
</commandset>

<tabbox id="tabs" flex="1">
  <tabs>
    <tab label="&subscriptions.tab.label;"/>
  </tabs>
  <tabpanels flex="1">
    <tabpanel id="subscriptionsTab" orient="vertical" flex="1">
      <hbox pack="end">
        <button label="&addSubscription.label;…" accesskey="&addSubscription.accesskey;"/>
      </hbox>

      <richlistbox id="subscriptions" flex="1"
          onselect="subscriptionUpdateCommands();if (this.selectedItem != subscriptionEdited) titleEditorEnd(true);">
        <richlistitem id="noSubscriptions" flex="1" hidden="true" orient="vertical">
          <description flex="1">&noSubscriptions.text;</description>
        </richlistitem>
        <richlistitem id="subscriptionTemplate" class="subscription" hidden="true" orient="vertical"
            onmousedown="this._wasSelected = (this.parentNode.selectedItem == this);"
            oncontextmenu="openSubscriptionMenu(this);">
          <vbox>
            <hbox align="center">
              <deck class="titleBox" flex="1" selectedIndex="0">
                <hbox pack="start" onclick="if (event.button == 0) titleEditorStart(this, true);">
                  <description value="{subscription.title}"/>
                  <description value=" ("/>
                  <if condition="{isExternal}">
                    <description value="&subscription.external.label;"/>
                  <else/>
                    <if condition="{subscription.homepage}">
                      <description class="text-link" value="&subscription.homepage.label;"
                        _url="{subscription.homepage}" tooltiptext="{subscription.homepage}"
                        onclick="if (event.button == 0) { event.stopPropagation();Utils.loadInBrowser(this.getAttribute('_url')); }"/>
                      <description value=", "/>
                    </if>
                    <description class="text-link" value="&subscription.source.label;"
                      _url="{subscription.url}" tooltiptext="{subscription.url}"
                      onclick="if (event.button == 0) { event.stopPropagation();Utils.loadInBrowser(this.getAttribute('_url')); }"/>
                  </if>
                  <description value=")"/>
                </hbox>
                <textbox class="titleEditor" onkeypress="titleEditorKeyPress(event);" onblur="titleEditorEnd(true);"/>
              </deck>
              <checkbox label="&subscription.enabled.label;" checked="{subscription.disabled ? 'false' : 'true'}" oncommand="updateSubscriptionDisabled(this);"/>
            </hbox>
            <hbox align="center">
              <description value="&subscription.lastDownload.label;"/>
              <description value=" "/>
              <if condition="{downloading}">
                <description value="&subscription.lastDownload.inProgress;"/>
              <elif condition="{!subscription.lastDownload}"/>
                <description value="&subscription.lastDownload.unknown;"/>
              <else/>
                <description value="{formatTime(subscription.lastDownload * 1000)}"/>
                <description value=" "/>
                <if condition="{subscription.downloadStatus}">
                  <description value=" ("/>
                  <if condition="{subscription.downloadStatus == 'synchronize_invalid_url'}">
                    <description value="&subscription.lastDownload.invalidURL;"/>
                  <elif condition="{subscription.downloadStatus == 'synchronize_connection_error'}"/>
                    <description value="&subscription.lastDownload.connectionError;"/>
                  <elif condition="{subscription.downloadStatus == 'synchronize_invalid_data'}"/>
                    <description value="&subscription.lastDownload.invalidData;"/>
                  <elif condition="{subscription.downloadStatus == 'synchronize_checksum_mismatch'}"/>
                    <description value="&subscription.lastDownload.checksumMismatch;"/>
                  <else/>   <!-- synchronize_ok -->
                    <description value="&subscription.lastDownload.success;"/>
                  </if>
                  <description value=")"/>
                </if>
              </if>
              <spacer flex="1"/>
              <button class="actionButton" type="menu" label="&subscription.actions.label;…">
                <menupopup>
                  <menuitem label="&subscription.update.label;…" key="subscription-update-key" command="subscription-update-command"/>
                  <menuitem label="&subscription.editTitle.label;…" key="subscription-editTitle-key" command="subscription-editTitle-command"/>
                  <menuitem label="&subscription.delete.label;…" key="subscription-delete-key" command="subscription-delete-command"/>
                  <menuseparator/>
                  <menuitem label="&subscription.moveUp.label;…" key="subscription-moveUp-key"/>
                  <menuitem label="&subscription.moveDown.label;…" key="subscription-moveDown-key"/>
                </menupopup>
              </button>
            </hbox>
          </vbox>
        </richlistitem>
      </richlistbox>
    </tabpanel>
  </tabpanels>
</tabbox>

</dialog>
